WEBVTT

00:00:00.000 --> 00:00:03.240
请说明Ajax Fetch Actual三者的区别

00:00:03.240 --> 00:00:05.419
这个是在基础面试中

00:00:05.419 --> 00:00:06.940
是非常常考的一个题目

00:00:06.940 --> 00:00:08.339
这是一个概念题目

00:00:08.339 --> 00:00:11.400
其实如果说你对Ajax有了解

00:00:11.400 --> 00:00:12.259
对Fetch有了解

00:00:12.259 --> 00:00:14.200
对Actual这几个词有了解呢

00:00:14.200 --> 00:00:15.480
其实这个题就很简单

00:00:15.480 --> 00:00:16.260
就是一层双红纸

00:00:16.260 --> 00:00:16.940
铜炮就完了

00:00:16.940 --> 00:00:19.160
但是如果说你现在

00:00:19.160 --> 00:00:21.140
现阶段基础知识还不是那么扎实

00:00:21.140 --> 00:00:23.740
如果说你对怎么实现Ajax

00:00:23.740 --> 00:00:25.039
怎么Fetch什么东西

00:00:25.039 --> 00:00:25.900
Actual没用过

00:00:25.900 --> 00:00:27.179
如果这种情况的话

00:00:27.179 --> 00:00:28.780
那这个题目就没法通过

00:00:28.780 --> 00:00:30.740
简单的几分钟来讲明白

00:00:30.740 --> 00:00:32.280
如果你是这种情况的话

00:00:32.280 --> 00:00:33.219
你要向我提问

00:00:33.219 --> 00:00:34.660
你说我基础知识不好

00:00:34.660 --> 00:00:35.560
我怎么该补充

00:00:35.560 --> 00:00:36.160
我告诉你

00:00:36.160 --> 00:00:38.079
那我们这儿就先

00:00:38.079 --> 00:00:40.439
以前者为主

00:00:40.439 --> 00:00:42.179
就是你了解这几个

00:00:42.179 --> 00:00:44.020
然后我们在这个基础上

00:00:44.020 --> 00:00:45.400
说一下这三者的区别

00:00:45.400 --> 00:00:46.120
其实很简单

00:00:46.120 --> 00:00:48.719
三者都用于网络请求

00:00:48.719 --> 00:00:50.980
但是他们是不同维度的一个词

00:00:50.980 --> 00:00:52.079
也就是说有时候

00:00:52.079 --> 00:00:54.140
他们出的这些题都是很混血的

00:00:54.140 --> 00:00:55.320
不是说同一个维度

00:00:55.320 --> 00:00:56.159
给你出几个对比

00:00:56.159 --> 00:00:57.120
这个其实好对比

00:00:57.120 --> 00:00:58.260
同一个维度大家都明白

00:00:58.259 --> 00:01:00.539
但他有时候会给你出一个不同维度的词

00:01:00.539 --> 00:01:02.599
就像我们之前讲的

00:01:02.599 --> 00:01:04.060
说占对裂

00:01:04.060 --> 00:01:04.459
对吧

00:01:04.459 --> 00:01:05.420
数据结构里面

00:01:05.420 --> 00:01:07.759
占对裂和数组有什么区别

00:01:07.759 --> 00:01:08.900
之前我们讲过

00:01:08.900 --> 00:01:09.120
对吧

00:01:09.120 --> 00:01:10.579
占对裂是一种罗列结构

00:01:10.579 --> 00:01:11.900
数组是一种物理结构

00:01:11.900 --> 00:01:13.179
它两个有什么区别

00:01:13.179 --> 00:01:14.079
它没有什么区别

00:01:14.079 --> 00:01:14.799
对吧

00:01:14.799 --> 00:01:16.299
它两个不同维度的东西

00:01:16.299 --> 00:01:17.739
那这三个就是这样的

00:01:17.739 --> 00:01:18.500
不同维度的东西

00:01:18.500 --> 00:01:19.539
但是你要讲出来

00:01:19.539 --> 00:01:20.400
它们是不同维度

00:01:20.400 --> 00:01:21.379
对吧

00:01:21.379 --> 00:01:22.120
阿甲克斯呢

00:01:22.120 --> 00:01:23.879
它是一个技术通称

00:01:23.879 --> 00:01:27.659
它是这么几个词的一个首字母的一个拼接

00:01:27.659 --> 00:01:30.359
意思就是异步的Jarstript和Charmel

00:01:30.359 --> 00:01:32.299
它是一个技术通称

00:01:32.299 --> 00:01:33.199
这个东西呢

00:01:33.199 --> 00:01:34.519
它是在很多年之前

00:01:34.519 --> 00:01:36.920
随着那个Web 2.0技术来慢慢推广的

00:01:36.920 --> 00:01:37.359
也就是说

00:01:37.359 --> 00:01:38.399
Web 1.0呢

00:01:38.400 --> 00:01:39.980
就是把这个网页做成一个报纸

00:01:39.980 --> 00:01:40.780
静态的

00:01:40.780 --> 00:01:41.800
就是网上的报纸

00:01:41.800 --> 00:01:42.940
然后你也不能点

00:01:42.940 --> 00:01:43.640
你也不能看

00:01:43.640 --> 00:01:45.020
你也不能评论

00:01:45.020 --> 00:01:47.060
你也不能去像现在的微博啊

00:01:47.060 --> 00:01:49.940
像这种网站一样去动态的去获取

00:01:49.940 --> 00:01:51.260
只能静态的看

00:01:51.260 --> 00:01:52.719
然后Web 2.0呢

00:01:52.719 --> 00:01:54.900
就变成了用户提交内容

00:01:54.900 --> 00:01:57.420
就是像论坛BBS这些就已经出来了

00:01:57.420 --> 00:01:58.280
然后这样的话

00:01:58.280 --> 00:02:01.080
就需要一种技术来去做这件事情

00:02:01.080 --> 00:02:01.480
对吧

00:02:01.480 --> 00:02:04.280
所以说这是一种技术通称

00:02:04.280 --> 00:02:05.520
它就类似于什么

00:02:05.520 --> 00:02:07.340
类似于我们讲的那个逻辑结构

00:02:07.340 --> 00:02:08.379
这只是类似啊

00:02:08.379 --> 00:02:09.919
它们两个不能放在一块看啊

00:02:09.919 --> 00:02:11.859
就是它是一种技术通称

00:02:11.859 --> 00:02:14.139
并不是一个实际的一个API

00:02:14.139 --> 00:02:14.799
或者什么东西

00:02:14.799 --> 00:02:16.519
像Fish呢

00:02:16.519 --> 00:02:17.479
就是一个具体的API

00:02:17.479 --> 00:02:19.139
怎么叫具体的API呢

00:02:19.139 --> 00:02:20.120
这个就非常好理解了

00:02:20.120 --> 00:02:21.259
比如说六乱七里面

00:02:21.259 --> 00:02:23.799
我们直接执行这个Fish

00:02:23.799 --> 00:02:24.219
它就有

00:02:24.219 --> 00:02:24.859
哦你看了没

00:02:24.859 --> 00:02:26.319
它是个函数

00:02:26.319 --> 00:02:28.060
它是一个全局API

00:02:28.060 --> 00:02:28.680
是个函数

00:02:28.680 --> 00:02:31.579
这个好理解对吧

00:02:31.579 --> 00:02:32.919
再往下

00:02:32.919 --> 00:02:35.099
AXROS它是个第三方库

00:02:35.099 --> 00:02:36.199
这个也很好理解

00:02:36.199 --> 00:02:38.000
就是我们用APM去安装

00:02:38.000 --> 00:02:38.960
然后去使用

00:02:38.960 --> 00:02:40.879
我们像JQuery一样去调用

00:02:40.879 --> 00:02:42.080
它和Fish一样

00:02:42.080 --> 00:02:43.219
它是有实在的东西的

00:02:43.219 --> 00:02:45.719
比如说我们就打开NPM

00:02:45.719 --> 00:02:47.280
我们去搜索这个AXROS

00:02:47.280 --> 00:02:48.479
就能做到它的主意

00:02:48.479 --> 00:02:49.659
大家看下的量很大

00:02:49.659 --> 00:02:50.039
对吧

00:02:50.039 --> 00:02:53.180
所以说它是个第三方库

00:02:53.180 --> 00:02:53.919
第三方的工具

00:02:53.919 --> 00:02:54.900
它放在NPM上

00:02:54.900 --> 00:02:56.020
让大家去安装

00:02:56.020 --> 00:02:56.879
然后去使用

00:02:56.879 --> 00:02:58.319
使用它就可以发去网络请求

00:02:58.319 --> 00:03:00.459
所以这三个呢

00:03:00.459 --> 00:03:02.659
是完全是不同维度的东西

00:03:02.659 --> 00:03:04.459
所以你看着会感觉很懵

00:03:04.459 --> 00:03:06.340
感觉我这三个都会啊

00:03:06.340 --> 00:03:07.659
但是这个问题一问

00:03:07.659 --> 00:03:08.900
我总不知道说什么呢

00:03:08.900 --> 00:03:09.560
对吧

00:03:09.560 --> 00:03:10.739
这就是因为你没有了解

00:03:10.739 --> 00:03:11.859
这个维度的这个概念

00:03:11.859 --> 00:03:13.319
它是不同的东西

00:03:13.319 --> 00:03:14.959
如果说你做技术时间长了

00:03:14.959 --> 00:03:15.519
你就能明白

00:03:15.519 --> 00:03:16.379
这个维度是什么东西

00:03:16.379 --> 00:03:18.079
比如说这个API和库

00:03:18.079 --> 00:03:19.180
它有什么样的区别

00:03:19.180 --> 00:03:19.500
对吧

00:03:19.500 --> 00:03:20.699
因为这个库里面呢

00:03:20.699 --> 00:03:22.400
它可以通过API去实现

00:03:22.400 --> 00:03:23.519
如果没有基本的API

00:03:23.519 --> 00:03:24.500
这个库是做不出来的

00:03:24.500 --> 00:03:26.319
有一个基础面试题

00:03:26.319 --> 00:03:28.580
就是用这个XMLHP Request

00:03:28.580 --> 00:03:29.659
去实现安甲克斯

00:03:29.659 --> 00:03:31.460
这个呢

00:03:31.460 --> 00:03:33.080
是一个比这个题目

00:03:33.080 --> 00:03:33.860
还要基础的

00:03:33.860 --> 00:03:35.180
就是最入门的一个面试题

00:03:35.180 --> 00:03:37.439
比如说我们代码中

00:03:37.439 --> 00:03:38.520
我们就已经写了

00:03:38.520 --> 00:03:39.819
在这儿

00:03:39.819 --> 00:03:40.240
我们呢

00:03:40.240 --> 00:03:41.420
这个题目太基础了

00:03:41.420 --> 00:03:43.280
我们在之前的课程中也讲过

00:03:43.280 --> 00:03:45.340
就是在之前另外一门课程中也讲过

00:03:45.340 --> 00:03:46.139
所以说我们这儿呢

00:03:46.139 --> 00:03:47.099
不能一行一行的

00:03:47.099 --> 00:03:47.900
给大家重复的写

00:03:47.900 --> 00:03:49.000
其实也没必要

00:03:49.000 --> 00:03:49.879
因为太基础了

00:03:49.879 --> 00:03:51.240
如果说你这个真的不会

00:03:51.240 --> 00:03:52.340
你找我提问啊

00:03:52.340 --> 00:03:53.659
我们大概看一下这个代码

00:03:53.659 --> 00:03:55.319
就是定一个安甲克斯函数

00:03:55.319 --> 00:03:56.740
然后传入URL

00:03:56.740 --> 00:03:57.539
传入URL

00:03:57.539 --> 00:03:58.979
传入这个回调

00:03:58.979 --> 00:04:02.819
然后去生成一个XMLHP Request

00:04:02.819 --> 00:04:03.719
大家看一下

00:04:03.719 --> 00:04:04.719
这个东西呢

00:04:04.719 --> 00:04:05.800
它就和Fetch一样

00:04:05.800 --> 00:04:08.379
它也是可以直接从这软器中去

00:04:08.379 --> 00:04:09.280
获取的

00:04:09.280 --> 00:04:09.819
我们看一下

00:04:09.819 --> 00:04:10.840
它也是一个函数

00:04:10.840 --> 00:04:11.199
对不对

00:04:11.199 --> 00:04:12.840
比如说这个东西

00:04:12.840 --> 00:04:14.120
这个XMLHP Request

00:04:14.120 --> 00:04:15.519
这个东西和Fetch一样

00:04:15.519 --> 00:04:18.060
它也是一个全局的基础的API

00:04:18.060 --> 00:04:19.019
它是提供的API

00:04:19.019 --> 00:04:21.199
当Fetch出现之前

00:04:21.199 --> 00:04:24.620
我们都是用这个API来去实现网络请求

00:04:24.620 --> 00:04:25.620
或者说网络获取

00:04:25.620 --> 00:04:28.579
然后生成这个之后

00:04:28.579 --> 00:04:31.259
我们去OpenGetURL

00:04:31.259 --> 00:04:34.740
然后那个这个Faust是用Eboot的方式

00:04:34.740 --> 00:04:37.959
然后等待它的这个State变化

00:04:37.959 --> 00:04:39.779
然后看到它这个State变成4

00:04:39.779 --> 00:04:40.860
Status变成200

00:04:40.860 --> 00:04:42.599
然后我们就执行回调就可以了

00:04:42.599 --> 00:04:44.620
然后最后是一个发送

00:04:44.620 --> 00:04:48.399
这是一个最最最基础的一个面试题

00:04:48.399 --> 00:04:50.040
一个携带码的面试题

00:04:50.040 --> 00:04:52.860
通过这个API来去实现这2x的函数

00:04:52.860 --> 00:04:54.120
大家看函数的名字

00:04:54.120 --> 00:04:55.000
我们叫2x1

00:04:55.000 --> 00:04:57.220
所以说2x是个通称

00:04:57.220 --> 00:04:59.120
就是它可以通过一些技术

00:04:59.120 --> 00:05:00.139
来去实现网络请求

00:05:00.139 --> 00:05:01.040
这个东西就叫2x

00:05:01.040 --> 00:05:02.620
它是一个技术通称

00:05:02.620 --> 00:05:05.500
这个API大家要记住

00:05:05.500 --> 00:05:07.000
因为我们等会儿要和它

00:05:07.000 --> 00:05:08.600
要把它和Fetch进行做对比

00:05:08.600 --> 00:05:12.420
再往下Fetch是什么呢

00:05:12.420 --> 00:05:14.340
Fetch它是个浏览器原生API

00:05:14.340 --> 00:05:14.920
用网络请求

00:05:14.920 --> 00:05:15.880
刚才我们演示了对吧

00:05:15.880 --> 00:05:18.440
浏览器那边去直接去使用Fetch就有

00:05:18.440 --> 00:05:21.340
然后它和这个XMLHP Request

00:05:21.340 --> 00:05:22.320
它是一个级别的

00:05:22.320 --> 00:05:23.740
它都是API级别的

00:05:23.740 --> 00:05:24.120
知道吧

00:05:24.120 --> 00:05:25.040
API级别的

00:05:25.040 --> 00:05:26.160
Fetch语法呢

00:05:26.160 --> 00:05:26.800
更加简洁

00:05:26.800 --> 00:05:27.420
更加易用

00:05:27.420 --> 00:05:29.360
而且它还支持Promise

00:05:29.360 --> 00:05:33.540
所以说Fetch是XMLHP Request

00:05:33.540 --> 00:05:35.100
它的一个升级版本

00:05:35.100 --> 00:05:36.860
当然这个老版本也继续保留

00:05:36.860 --> 00:05:38.520
因为这个用起来比较麻烦一些

00:05:38.520 --> 00:05:39.500
这个简洁一些

00:05:39.500 --> 00:05:40.440
而且支持Promise

00:05:40.440 --> 00:05:42.440
可以看一下

00:05:42.440 --> 00:05:44.320
就是刚才那个代码

00:05:44.340 --> 00:05:45.560
大家看我们这定义这个

00:05:45.560 --> 00:05:46.560
X2这个函数

00:05:46.560 --> 00:05:47.420
传URL

00:05:47.420 --> 00:05:48.120
然后呢

00:05:48.120 --> 00:05:50.520
我们就直接去FetchURL

00:05:50.520 --> 00:05:51.660
然后去.zen

00:05:51.660 --> 00:05:52.880
它支持Promise

00:05:52.880 --> 00:05:53.240
对吧

00:05:53.240 --> 00:05:54.880
然后就直接获取这个结果

00:05:54.880 --> 00:05:56.140
然后就直接返回了

00:05:56.140 --> 00:05:57.560
返回结果中呢

00:05:57.560 --> 00:05:58.500
我们还可以用Promise

00:05:58.500 --> 00:06:00.220
再去执行一步了用

00:06:00.220 --> 00:06:01.320
所以说

00:06:01.320 --> 00:06:02.360
它的这个代码

00:06:02.360 --> 00:06:03.240
更加简洁一些

00:06:03.240 --> 00:06:04.100
相比它来说

00:06:04.100 --> 00:06:04.300
对吧

00:06:04.300 --> 00:06:05.800
它的就更加复杂一些

00:06:05.800 --> 00:06:08.040
果然是个后出的东西

00:06:08.040 --> 00:06:08.920
更加好用一些

00:06:08.920 --> 00:06:09.300
对不对

00:06:09.300 --> 00:06:10.420
但请注意

00:06:10.420 --> 00:06:11.920
这里面这个Fetch

00:06:11.920 --> 00:06:12.920
和这个

00:06:12.920 --> 00:06:14.120
上面RTB Request

00:06:14.120 --> 00:06:15.139
它是一个级别

00:06:15.139 --> 00:06:16.180
RJX呢

00:06:16.180 --> 00:06:16.879
它只是个通声

00:06:16.879 --> 00:06:17.400
大家看

00:06:17.400 --> 00:06:19.520
我可以用这个APR来实现RJX

00:06:19.520 --> 00:06:21.720
我也可以用这个APR来去实现RJX

00:06:21.720 --> 00:06:22.360
对不对

00:06:22.360 --> 00:06:23.740
它是个技术通声

00:06:23.740 --> 00:06:27.759
AXROS

00:06:27.759 --> 00:06:28.900
AXROS呢

00:06:28.900 --> 00:06:29.560
它是一个

00:06:29.560 --> 00:06:31.040
请求的一个酷

00:06:31.040 --> 00:06:32.160
这个类部就是酷的意思

00:06:32.160 --> 00:06:32.699
Library

00:06:32.699 --> 00:06:33.980
酷的意思啊

00:06:33.980 --> 00:06:35.079
就是第三方酷

00:06:35.079 --> 00:06:35.879
第三方的工具

00:06:35.879 --> 00:06:36.660
它是随着View

00:06:36.660 --> 00:06:37.180
获取起来的

00:06:37.180 --> 00:06:38.300
因为View推荐它使用

00:06:38.300 --> 00:06:41.019
而且它可以在LODGIS中使用

00:06:41.019 --> 00:06:41.660
所以说

00:06:41.660 --> 00:06:43.100
在现在来说

00:06:43.100 --> 00:06:44.819
应该是最火爆的一个

00:06:44.819 --> 00:06:46.540
请求的一个酷

00:06:46.540 --> 00:06:48.540
内部呢

00:06:48.540 --> 00:06:49.480
它可以使用这个

00:06:49.480 --> 00:06:50.740
Tremel Request

00:06:50.740 --> 00:06:51.840
或者说Fetch

00:06:51.840 --> 00:06:52.540
来去实现

00:06:52.540 --> 00:06:54.220
因为它是个工具嘛

00:06:54.220 --> 00:06:54.480
对吧

00:06:54.480 --> 00:06:56.000
你要实现工具的功能

00:06:56.000 --> 00:06:57.620
你得有底层APR的支持

00:06:57.620 --> 00:06:59.100
如果没有底层APR的支持

00:06:59.100 --> 00:07:00.860
你这个工具是实现不了的

00:07:00.860 --> 00:07:01.260
所以说

00:07:01.260 --> 00:07:03.180
这个可以用APR来去实现

00:07:03.180 --> 00:07:06.300
然后它的地址是这儿

00:07:06.300 --> 00:07:07.920
当然你也可以像我刚才一样

00:07:07.920 --> 00:07:10.180
在这个NPM里面

00:07:10.180 --> 00:07:11.400
直接去搜索AXROS

00:07:11.400 --> 00:07:12.200
然后你能搜导

00:07:12.200 --> 00:07:13.280
其实这样都行

00:07:13.280 --> 00:07:15.180
大家看这个地方有Github的地址

00:07:15.180 --> 00:07:16.620
然后有它的官网的地址

00:07:16.620 --> 00:07:17.300
这儿都有啊

00:07:17.300 --> 00:07:20.300
OK

00:07:20.300 --> 00:07:21.400
其实讲到这儿之后呢

00:07:21.400 --> 00:07:22.259
大家应该都明白了

00:07:22.259 --> 00:07:22.920
这三个的区别

00:07:22.920 --> 00:07:24.240
大家应该怎么去回答

00:07:24.240 --> 00:07:25.480
首先

00:07:25.480 --> 00:07:27.659
艾迪克斯是一种技术通称

00:07:27.659 --> 00:07:28.779
然后Fetch

00:07:28.779 --> 00:07:30.279
它是一个原生的API

00:07:30.279 --> 00:07:31.719
然后AXROS

00:07:31.719 --> 00:07:32.800
它是一个第三方库

00:07:32.800 --> 00:07:34.519
它们都是跟网络请求

00:07:34.519 --> 00:07:35.300
有关系的东西

00:07:35.300 --> 00:07:36.000
只不过呢

00:07:36.000 --> 00:07:36.980
是不同维度的东西

00:07:36.980 --> 00:07:38.180
所以说你回答的时候呢

00:07:38.180 --> 00:07:39.680
就可以通过这种方式来去回答

00:07:39.680 --> 00:07:40.879
然后每一个里面呢

00:07:40.879 --> 00:07:41.779
再举一些例子

00:07:41.779 --> 00:07:43.039
比如说我刚才说的那些例子

00:07:43.039 --> 00:07:43.939
对吧

00:07:43.939 --> 00:07:45.579
其实非常简单的一个题

00:07:45.579 --> 00:07:46.360
一层窗户纸

00:07:46.360 --> 00:07:47.000
同步就完了

00:07:47.000 --> 00:07:47.819
好

00:07:47.819 --> 00:07:48.279
换重脸

00:07:48.279 --> 00:07:50.240
库和API的区别是什么

00:07:50.240 --> 00:07:52.879
API是原生的函数

00:07:52.879 --> 00:07:53.819
库呢

00:07:53.819 --> 00:07:55.400
是一个第三方的工具

00:07:55.400 --> 00:07:56.439
我们说

00:07:56.439 --> 00:07:58.139
网络请求的第三方库

00:07:58.139 --> 00:07:59.680
只有AXROS一个吗

00:07:59.680 --> 00:08:01.220
不是对吧

00:08:01.220 --> 00:08:02.240
肯定有很多个

00:08:02.240 --> 00:08:04.220
你现在从网上搜一下

00:08:04.220 --> 00:08:05.660
网络请求第三方库

00:08:05.660 --> 00:08:07.120
那你搜一千个一万个

00:08:07.120 --> 00:08:07.540
可能都有

00:08:07.540 --> 00:08:08.660
当然有一些不常用

00:08:08.660 --> 00:08:09.180
对吧

00:08:09.180 --> 00:08:10.920
但是API呢

00:08:10.920 --> 00:08:12.379
只有那么一个或两个

00:08:12.379 --> 00:08:14.139
现在只有Fetch和那个

00:08:14.139 --> 00:08:15.600
刚才演示的这个

00:08:15.600 --> 00:08:17.879
我们判断错了

00:08:17.879 --> 00:08:18.639
这些看一下

00:08:18.639 --> 00:08:20.160
API只有这个

00:08:20.160 --> 00:08:21.460
XMLHP Request

00:08:21.460 --> 00:08:22.960
还有这个Fetch这两个

00:08:22.960 --> 00:08:23.920
但是第三方库

00:08:23.920 --> 00:08:25.699
我可以弄很多个

00:08:25.699 --> 00:08:26.920
我也可以自己去做一个

00:08:26.920 --> 00:08:27.120
对吧

00:08:27.120 --> 00:08:27.620
发布上去

00:08:27.620 --> 00:08:28.340
那别人用不用

00:08:28.340 --> 00:08:29.100
是别人的事情

00:08:29.100 --> 00:08:30.560
所以说

00:08:30.560 --> 00:08:32.700
这两个是有区别的

00:08:32.700 --> 00:08:34.139
而且它两个是不一个

00:08:34.139 --> 00:08:35.820
它不是一个微度的东西

00:08:35.820 --> 00:08:36.840
第三方库

00:08:36.840 --> 00:08:38.379
需要用API来实现

00:08:38.379 --> 00:08:40.899
API就是为数不多的那几个

00:08:40.899 --> 00:08:41.600
固定死了

00:08:41.600 --> 00:08:42.299
其他方库

00:08:42.299 --> 00:08:43.720
可以用户

00:08:43.720 --> 00:08:44.700
自己去贡献

00:08:44.700 --> 00:08:45.399
自己去开发

00:08:45.399 --> 00:08:46.860
可以有很多个

00:08:46.860 --> 00:08:48.799
实际项目中

00:08:48.799 --> 00:08:50.539
使用现成的其他方库

00:08:50.539 --> 00:08:51.879
尽量不要自己造轮子

00:08:51.879 --> 00:08:53.080
这是一个忠告

00:08:53.080 --> 00:08:55.720
就是面试是面试

00:08:55.720 --> 00:08:56.759
工作是工作

00:08:56.759 --> 00:08:57.360
当然了

00:08:57.360 --> 00:08:58.259
还有一种情况

00:08:58.259 --> 00:08:58.960
就是学习

00:08:58.960 --> 00:09:00.220
学习的时候

00:09:00.220 --> 00:09:01.460
造轮子是一个很好

00:09:01.460 --> 00:09:02.259
很好的学习方式

00:09:02.259 --> 00:09:03.940
造轮子非常好

00:09:03.940 --> 00:09:04.899
不管是你造这个

00:09:04.899 --> 00:09:05.799
网络请求的轮子

00:09:05.799 --> 00:09:07.120
还是自己写一个view

00:09:07.120 --> 00:09:08.159
或者说自己写一个什么

00:09:08.159 --> 00:09:08.639
什么工具

00:09:08.639 --> 00:09:09.879
这都是非常非常好的一个

00:09:09.879 --> 00:09:10.679
造轮子的方式

00:09:10.679 --> 00:09:12.819
我记得在很早之前

00:09:12.819 --> 00:09:13.959
大家去学前度的时候

00:09:13.959 --> 00:09:15.480
就想着自己去写一个requery

00:09:15.480 --> 00:09:17.120
这也是非常好的一个学习方式

00:09:17.120 --> 00:09:18.039
在之前的时候

00:09:18.039 --> 00:09:20.679
但是实际工作中

00:09:20.679 --> 00:09:21.879
你还是要用现成的

00:09:21.879 --> 00:09:23.159
毕竟你造轮子

00:09:23.159 --> 00:09:24.100
那个东西

00:09:24.100 --> 00:09:24.839
不如人家

00:09:24.839 --> 00:09:26.360
之前就已经有的

00:09:26.360 --> 00:09:27.840
而且经过用户验证的这个东西

00:09:27.840 --> 00:09:28.779
来的稳定

00:09:28.779 --> 00:09:30.240
刚才已经说了

00:09:30.240 --> 00:09:31.419
这是学习的好方式

00:09:31.419 --> 00:09:31.939
好

00:09:31.939 --> 00:09:32.819
好

00:09:32.819 --> 00:09:33.139
好

00:09:33.139 --> 00:09:33.419
好

00:09:33.419 --> 00:09:33.939
好

